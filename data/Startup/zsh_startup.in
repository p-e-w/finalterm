#!@ZSHEXE@

# Final Term's customizations start here
finalterm_fpath="@PKGDATADIR@/Startup/zsh_functions"
if [ -d $finalterm_fpath ]; then
	fpath=($finalterm_fpath $fpath)
fi
FPATH="${finalterm_fpath}:${FPATH}"
export FPATH

autoload send_control_sequence
autoload final_term_control_sequence


# Logic for prompt and command detection
send_return_code() {
	# Send sequence containing the return code of the last command
	send_control_sequence "$(final_term_control_sequence 'D' "$?")"
}

precmd_hook() {
	# Send sequence marking a command prompt
	send_control_sequence "$(final_term_control_sequence 'A')"
}
precmd_functions=( send_return_code $preexec_functions precmd_hook )

preexec_hook() {
	# Send sequence containing the command to be executed
	send_control_sequence "$(final_term_control_sequence 'C' "$1")"
}
preexec_functions=( $preexec_functions preexec_hook )

PROMPT="${PROMPT}$(final_term_control_sequence 'B')"

# Logic for terminal commands
function trim() {
	local text=$1
	text="${text#"${text%%[![:space:]]*}"}" # remove leading whitespace characters
	text="${text%"${text##*[![:space:]]}"}" # remove trailing whitespace characters
	echo -n "$text"
}

function send_commands() {
	send_control_sequence "$(final_term_control_sequence 'H' "$1" '#' "${@:2}")"
}

pushd "@PKGDATADIR@/TerminalCommands" > /dev/null
while IFS= read -r line; do
	stripped_line=$(trim "$line")

	if [ -n "$stripped_line" ]; then
		# Non-empty line
		if [ "${stripped_line:0:1}" != "#" ]; then
			# Non-comment line
			# Split on "=" character and escape double quotes used for command arguments
			name=$(trim "${stripped_line%%\=*}")
			cmds=$(trim "${${stripped_line#*\=}//\"/\\\"}")

			alias ",$name"="send_commands \"$cmds\""
		fi
	fi
done <*.ftcommands
popd > /dev/null


# Termlet-related logic
function run_termlet() {
	if [ -t 1 ]; then
		"@PKGDATADIR@/Termlets/zsh/$@"
	else
		"$@"
	fi
}

# Set up termlet aliases
pushd "@PKGDATADIR@/Termlets/zsh" > /dev/null
for filename in *; do
	alias $filename="run_termlet '$filename'"
done
popd > /dev/null

cd ~
