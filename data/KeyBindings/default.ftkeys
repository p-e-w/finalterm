# Final Term default key bindings
#
# Entries take the form
#   KEY { MODE; MODE; ... } = COMMAND; COMMAND; ...
#
# KEY must be parsable by Gtk.accelerator_parse
# (https://developer.gnome.org/gtk3/stable/gtk3-Keyboard-Accelerators.html#gtk-accelerator-parse).
#
# MODEs specify the internal modes of the active terminal
# that must be set for the key binding to execute.
# Prefixing a mode name with "~" negates it, i.e. specifies
# that the mode must NOT be set.
# For a list of valid mode names, see the "TerminalMode" enum
# in TerminalOutput.vala.
# Specifying modes is optional and works only with
# application-level key bindings.
#
# COMMANDs are executed sequentially.

# These are global key bindings which work irrespective
# of whether the application window is focused or even visible.
# Global shortcuts should be used very sparingly.

[Global]

F10 = TOGGLE_VISIBLE
F12 = TOGGLE_DROPDOWN


# These are application-level key bindings which work
# only when the application window has the keyboard focus.

[Application]

#F5 = PRINT_METRICS
F11 = TOGGLE_FULLSCREEN

# The following standard key bindings are a direct conversion from
# the list found in st (http://git.suckless.org/st/tree/config.def.h),
# which appears to be the most complete of all terminal emulators
# in terms of keyboard support.
#
# NOTE: Gtk.accelerator_parse does not support specifying
#       the ABSENCE of modifiers, therefore bindings with XK_NO_MOD
#       might have been converted incorrectly.

# These lines override st's default delete key bindings that work
# only in application keypad mode to more closely match the behavior
# of other terminals such as GNOME Terminal.
KP_Delete = SEND_TO_SHELL "\\033[3~"
Delete    = SEND_TO_SHELL "\\033[3~"
# TODO: Copy *selection* to clipboard

<Ctrl>Insert   = COPY_TO_CLIPBOARD
<Ctrl><Shift>C = COPY_TO_CLIPBOARD
<Shift>Insert  = PASTE_FROM_CLIPBOARD
<Ctrl><Shift>V = PASTE_FROM_CLIPBOARD

<Shift>KP_Home { ~cursor }      = SEND_TO_SHELL "\\033[2J"
<Shift>KP_Home { cursor }       = SEND_TO_SHELL "\\033[1\;2H"
KP_Home { ~cursor }             = SEND_TO_SHELL "\\033[H"
KP_Home { cursor }              = SEND_TO_SHELL "\\033[1~"
KP_Up { keypad }                = SEND_TO_SHELL "\\033Ox"
KP_Up { ~cursor }               = SEND_TO_SHELL "\\033[A"
KP_Up { cursor }                = SEND_TO_SHELL "\\033OA"
KP_Down { keypad }              = SEND_TO_SHELL "\\033Or"
KP_Down { ~cursor }             = SEND_TO_SHELL "\\033[B"
KP_Down { cursor }              = SEND_TO_SHELL "\\033OB"
KP_Left { keypad }              = SEND_TO_SHELL "\\033Ot"
KP_Left { ~cursor }             = SEND_TO_SHELL "\\033[D"
KP_Left { cursor }              = SEND_TO_SHELL "\\033OD"
KP_Right { keypad }             = SEND_TO_SHELL "\\033Ov"
KP_Right { ~cursor }            = SEND_TO_SHELL "\\033[C"
KP_Right { cursor }             = SEND_TO_SHELL "\\033OC"
<Shift>KP_Prior                 = SEND_TO_SHELL "\\033[5\;2~"
KP_Prior                        = SEND_TO_SHELL "\\033[5~"
KP_Begin                        = SEND_TO_SHELL "\\033[E"
<Ctrl>KP_End { ~keypad }        = SEND_TO_SHELL "\\033[J"
<Ctrl>KP_End { keypad }         = SEND_TO_SHELL "\\033[1\;5F"
<Shift>KP_End { ~keypad }       = SEND_TO_SHELL "\\033[K"
<Shift>KP_End { keypad }        = SEND_TO_SHELL "\\033[1\;2F"
KP_End                          = SEND_TO_SHELL "\\033[4~"
<Shift>KP_Next                  = SEND_TO_SHELL "\\033[6\;2~"
KP_Next                         = SEND_TO_SHELL "\\033[6~"
<Shift>KP_Insert { keypad }     = SEND_TO_SHELL "\\033[2\;2~"
<Shift>KP_Insert { ~keypad }    = SEND_TO_SHELL "\\033[4l"
<Ctrl>KP_Insert { ~keypad }     = SEND_TO_SHELL "\\033[L"
<Ctrl>KP_Insert { keypad }      = SEND_TO_SHELL "\\033[2\;5~"
KP_Insert { ~keypad }           = SEND_TO_SHELL "\\033[4h"
KP_Insert { keypad }            = SEND_TO_SHELL "\\033[2~"
<Ctrl>KP_Delete { ~keypad }     = SEND_TO_SHELL "\\033[M"
<Ctrl>KP_Delete { keypad }      = SEND_TO_SHELL "\\033[3\;5~"
<Shift>KP_Delete { ~keypad }    = SEND_TO_SHELL "\\033[2K"
<Shift>KP_Delete { keypad }     = SEND_TO_SHELL "\\033[3\;2~"
KP_Delete { keypad }            = SEND_TO_SHELL "\\033[3~"
KP_Multiply { keypad; numlock } = SEND_TO_SHELL "\\033Oj"
KP_Add { keypad; numlock }      = SEND_TO_SHELL "\\033Ok"
KP_Enter { keypad; numlock }    = SEND_TO_SHELL "\\033OM"
KP_Enter { ~keypad; ~crlf }     = SEND_TO_SHELL "\\r"
KP_Enter { ~keypad; crlf }      = SEND_TO_SHELL "\\r\\n"
KP_Subtract { keypad; numlock } = SEND_TO_SHELL "\\033Om"
KP_Decimal { keypad; numlock }  = SEND_TO_SHELL "\\033On"
KP_Divide { keypad; numlock }   = SEND_TO_SHELL "\\033Oo"
KP_0 { keypad; numlock }        = SEND_TO_SHELL "\\033Op"
KP_1 { keypad; numlock }        = SEND_TO_SHELL "\\033Oq"
KP_2 { keypad; numlock }        = SEND_TO_SHELL "\\033Or"
KP_3 { keypad; numlock }        = SEND_TO_SHELL "\\033Os"
KP_4 { keypad; numlock }        = SEND_TO_SHELL "\\033Ot"
KP_5 { keypad; numlock }        = SEND_TO_SHELL "\\033Ou"
KP_6 { keypad; numlock }        = SEND_TO_SHELL "\\033Ov"
KP_7 { keypad; numlock }        = SEND_TO_SHELL "\\033Ow"
KP_8 { keypad; numlock }        = SEND_TO_SHELL "\\033Ox"
KP_9 { keypad; numlock }        = SEND_TO_SHELL "\\033Oy"

<Shift>Up                 = SEND_TO_SHELL "\\033[1\;2A"
<Ctrl>Up                  = SEND_TO_SHELL "\\033[1\;5A"
<Mod1>Up                  = SEND_TO_SHELL "\\033[1\;3A"
Up { ~cursor }            = SEND_TO_SHELL "\\033[A"
Up { cursor }             = SEND_TO_SHELL "\\033OA"
<Shift>Down               = SEND_TO_SHELL "\\033[1\;2B"
<Ctrl>Down                = SEND_TO_SHELL "\\033[1\;5B"
<Mod1>Down                = SEND_TO_SHELL "\\033[1\;3B"
Down { ~cursor }          = SEND_TO_SHELL "\\033[B"
Down { cursor }           = SEND_TO_SHELL "\\033OB"
<Shift>Left               = SEND_TO_SHELL "\\033[1\;2D"
<Ctrl>Left                = SEND_TO_SHELL "\\033[1\;5D"
<Mod1>Left                = SEND_TO_SHELL "\\033[1\;3D"
Left { ~cursor }          = SEND_TO_SHELL "\\033[D"
Left { cursor }           = SEND_TO_SHELL "\\033OD"
<Shift>Right              = SEND_TO_SHELL "\\033[1\;2C"
<Ctrl>Right               = SEND_TO_SHELL "\\033[1\;5C"
<Mod1>Right               = SEND_TO_SHELL "\\033[1\;3C"
Right { ~cursor }         = SEND_TO_SHELL "\\033[C"
Right { cursor }          = SEND_TO_SHELL "\\033OC"
<Shift>ISO_Left_Tab       = SEND_TO_SHELL "\\033[Z"
<Mod1>Return { ~crlf }    = SEND_TO_SHELL "\\033\\r"
<Mod1>Return { crlf }     = SEND_TO_SHELL "\\033\\r\\n"
Return { ~crlf }          = SEND_TO_SHELL "\\r"
Return { crlf }           = SEND_TO_SHELL "\\r\\n"
#<Shift>Insert { ~keypad } = SEND_TO_SHELL "\\033[4l"
#<Shift>Insert { keypad }  = SEND_TO_SHELL "\\033[2\;2~"
#<Ctrl>Insert { ~keypad }  = SEND_TO_SHELL "\\033[L"
#<Ctrl>Insert { keypad }   = SEND_TO_SHELL "\\033[2\;5~"
Insert { ~keypad }        = SEND_TO_SHELL "\\033[4h"
Insert { keypad }         = SEND_TO_SHELL "\\033[2~"
<Ctrl>Delete { ~keypad }  = SEND_TO_SHELL "\\033[M"
<Ctrl>Delete { keypad }   = SEND_TO_SHELL "\\033[3\;5~"
<Shift>Delete { ~keypad } = SEND_TO_SHELL "\\033[2K"
<Shift>Delete { keypad }  = SEND_TO_SHELL "\\033[3\;2~"
Delete { keypad }         = SEND_TO_SHELL "\\033[3~"
<Shift>Home { ~cursor }   = SEND_TO_SHELL "\\033[2J"
<Shift>Home { cursor }    = SEND_TO_SHELL "\\033[1\;2H"
Home { ~cursor }          = SEND_TO_SHELL "\\033[H"
Home { cursor }           = SEND_TO_SHELL "\\033[1~"
<Ctrl>End { ~keypad }     = SEND_TO_SHELL "\\033[J"
<Ctrl>End { keypad }      = SEND_TO_SHELL "\\033[1\;5F"
<Shift>End { ~keypad }    = SEND_TO_SHELL "\\033[K"
<Shift>End { keypad }     = SEND_TO_SHELL "\\033[1\;2F"
End                       = SEND_TO_SHELL "\\033[4~"
<Ctrl>Prior               = SEND_TO_SHELL "\\033[5\;5~"
<Shift>Prior              = SEND_TO_SHELL "\\033[5\;2~"
Prior                     = SEND_TO_SHELL "\\033[5~"
<Ctrl>Next                = SEND_TO_SHELL "\\033[6\;5~"
<Shift>Next               = SEND_TO_SHELL "\\033[6\;2~"
Next                      = SEND_TO_SHELL "\\033[6~"

F1         = SEND_TO_SHELL "\\033OP"
<Shift>F1  = SEND_TO_SHELL "\\033[1\;2P"
<Ctrl>F1   = SEND_TO_SHELL "\\033[1\;5P"
<Mod4>F1   = SEND_TO_SHELL "\\033[1\;6P"
<Mod1>F1   = SEND_TO_SHELL "\\033[1\;3P"
<Mod3>F1   = SEND_TO_SHELL "\\033[1\;4P"
F2         = SEND_TO_SHELL "\\033OQ"
<Shift>F2  = SEND_TO_SHELL "\\033[1\;2Q"
<Ctrl>F2   = SEND_TO_SHELL "\\033[1\;5Q"
<Mod4>F2   = SEND_TO_SHELL "\\033[1\;6Q"
<Mod1>F2   = SEND_TO_SHELL "\\033[1\;3Q"
<Mod3>F2   = SEND_TO_SHELL "\\033[1\;4Q"
F3         = SEND_TO_SHELL "\\033OR"
<Shift>F3  = SEND_TO_SHELL "\\033[1\;2R"
<Ctrl>F3   = SEND_TO_SHELL "\\033[1\;5R"
<Mod4>F3   = SEND_TO_SHELL "\\033[1\;6R"
<Mod1>F3   = SEND_TO_SHELL "\\033[1\;3R"
<Mod3>F3   = SEND_TO_SHELL "\\033[1\;4R"
F4         = SEND_TO_SHELL "\\033OS"
<Shift>F4  = SEND_TO_SHELL "\\033[1\;2S"
<Ctrl>F4   = SEND_TO_SHELL "\\033[1\;5S"
<Mod4>F4   = SEND_TO_SHELL "\\033[1\;6S"
<Mod1>F4   = SEND_TO_SHELL "\\033[1\;3S"
F5         = SEND_TO_SHELL "\\033[15~"
<Shift>F5  = SEND_TO_SHELL "\\033[15\;2~"
<Ctrl>F5   = SEND_TO_SHELL "\\033[15\;5~"
<Mod4>F5   = SEND_TO_SHELL "\\033[15\;6~"
<Mod1>F5   = SEND_TO_SHELL "\\033[15\;3~"
F6         = SEND_TO_SHELL "\\033[17~"
<Shift>F6  = SEND_TO_SHELL "\\033[17\;2~"
<Ctrl>F6   = SEND_TO_SHELL "\\033[17\;5~"
<Mod4>F6   = SEND_TO_SHELL "\\033[17\;6~"
<Mod1>F6   = SEND_TO_SHELL "\\033[17\;3~"
F7         = SEND_TO_SHELL "\\033[18~"
<Shift>F7  = SEND_TO_SHELL "\\033[18\;2~"
<Ctrl>F7   = SEND_TO_SHELL "\\033[18\;5~"
<Mod4>F7   = SEND_TO_SHELL "\\033[18\;6~"
<Mod1>F7   = SEND_TO_SHELL "\\033[18\;3~"
F8         = SEND_TO_SHELL "\\033[19~"
<Shift>F8  = SEND_TO_SHELL "\\033[19\;2~"
<Ctrl>F8   = SEND_TO_SHELL "\\033[19\;5~"
<Mod4>F8   = SEND_TO_SHELL "\\033[19\;6~"
<Mod1>F8   = SEND_TO_SHELL "\\033[19\;3~"
F9         = SEND_TO_SHELL "\\033[20~"
<Shift>F9  = SEND_TO_SHELL "\\033[20\;2~"
<Ctrl>F9   = SEND_TO_SHELL "\\033[20\;5~"
<Mod4>F9   = SEND_TO_SHELL "\\033[20\;6~"
<Mod1>F9   = SEND_TO_SHELL "\\033[20\;3~"
F10        = SEND_TO_SHELL "\\033[21~"
<Shift>F10 = SEND_TO_SHELL "\\033[21\;2~"
<Ctrl>F10  = SEND_TO_SHELL "\\033[21\;5~"
<Mod4>F10  = SEND_TO_SHELL "\\033[21\;6~"
<Mod1>F10  = SEND_TO_SHELL "\\033[21\;3~"
F11        = SEND_TO_SHELL "\\033[23~"
<Shift>F11 = SEND_TO_SHELL "\\033[23\;2~"
<Ctrl>F11  = SEND_TO_SHELL "\\033[23\;5~"
<Mod4>F11  = SEND_TO_SHELL "\\033[23\;6~"
<Mod1>F11  = SEND_TO_SHELL "\\033[23\;3~"
F12        = SEND_TO_SHELL "\\033[24~"
<Shift>F12 = SEND_TO_SHELL "\\033[24\;2~"
<Ctrl>F12  = SEND_TO_SHELL "\\033[24\;5~"
<Mod4>F12  = SEND_TO_SHELL "\\033[24\;6~"
<Mod1>F12  = SEND_TO_SHELL "\\033[24\;3~"
F13        = SEND_TO_SHELL "\\033[1\;2P"
F14        = SEND_TO_SHELL "\\033[1\;2Q"
F15        = SEND_TO_SHELL "\\033[1\;2R"
F16        = SEND_TO_SHELL "\\033[1\;2S"
F17        = SEND_TO_SHELL "\\033[15\;2~"
F18        = SEND_TO_SHELL "\\033[17\;2~"
F19        = SEND_TO_SHELL "\\033[18\;2~"
F20        = SEND_TO_SHELL "\\033[19\;2~"
F21        = SEND_TO_SHELL "\\033[20\;2~"
F22        = SEND_TO_SHELL "\\033[21\;2~"
F23        = SEND_TO_SHELL "\\033[23\;2~"
F24        = SEND_TO_SHELL "\\033[24\;2~"
F25        = SEND_TO_SHELL "\\033[1\;5P"
F26        = SEND_TO_SHELL "\\033[1\;5Q"
F27        = SEND_TO_SHELL "\\033[1\;5R"
F28        = SEND_TO_SHELL "\\033[1\;5S"
F29        = SEND_TO_SHELL "\\033[15\;5~"
F30        = SEND_TO_SHELL "\\033[17\;5~"
F31        = SEND_TO_SHELL "\\033[18\;5~"
F32        = SEND_TO_SHELL "\\033[19\;5~"
F33        = SEND_TO_SHELL "\\033[20\;5~"
F34        = SEND_TO_SHELL "\\033[21\;5~"
F35        = SEND_TO_SHELL "\\033[23\;5~"
